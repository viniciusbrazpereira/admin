<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>br.com.cardif.upl</groupId>
	<artifactId>uploader-client</artifactId>
	<version>3.0.0</version>
	<packaging>war</packaging>

	<name>uploader-client</name>
	<description>upload 3.0.0</description>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.7.RELEASE</version>		
		<relativePath/>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>
	
	<dependencies>		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-tomcat</artifactId>
	        <scope>provided</scope>
	    </dependency>       		
	</dependencies>

	<profiles>
		   <profile>
			     <id>prod</id>
			     <activation>
	            	<activeByDefault>true</activeByDefault>
	        	</activation>
				<build>
					<finalName>upload</finalName>
					<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<attachClasses>true</attachClasses>	
							<failOnMissingWebXml>false</failOnMissingWebXml>							
							<webResources>
								<resource>
									<directory>src/webapp</directory>
									<filtering>true</filtering>
								</resource>
							</webResources>
						</configuration>
					</plugin>					
					
					<plugin>					
						<groupId>com.github.eirslett</groupId>					
						<artifactId>frontend-maven-plugin</artifactId>					
						<version>1.3</version>							
						<configuration>
							<nodeVersion>v10.15.3</nodeVersion>
							<npmVersion>6.4.1</npmVersion>							
						</configuration>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>v10.15.3</nodeVersion>
									<npmVersion>6.4.1</npmVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							 <execution>
								<id>npm run build-prod</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>run build-prod</arguments>
									<npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
								</configuration>
								<phase>generate-resources</phase>	
							</execution> 									 
						</executions>					
					</plugin>					 
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/static/</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/deploy</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin> 
				</plugins>
				</build>
		 </profile>		 
		 
		 <profile>
			     <id>local</id>
			     <activation>
	            	<activeByDefault>true</activeByDefault>
	        	</activation>
				<build>
					<finalName>upload</finalName>
					<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<attachClasses>true</attachClasses>	
							<failOnMissingWebXml>false</failOnMissingWebXml>							
							<webResources>
								<resource>
									<directory>src/webapp</directory>
									<filtering>true</filtering>
								</resource>
							</webResources>
						</configuration>
					</plugin>					
					
					<plugin>					
						<groupId>com.github.eirslett</groupId>					
						<artifactId>frontend-maven-plugin</artifactId>					
						<version>1.3</version>							
						<configuration>
							<nodeVersion>v10.15.3</nodeVersion>
							<npmVersion>6.4.1</npmVersion>
						</configuration>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>v10.15.3</nodeVersion>
									<npmVersion>6.4.1</npmVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							 <execution>
								<id>npm run build-local(dev)</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>run build-local</arguments>
									<npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
								</configuration>
								<phase>generate-resources</phase>	
							</execution> 									 
						</executions>					
					</plugin>					 
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/static/</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/deploy</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin> 
				</plugins>
				</build>
		 </profile>
		 
		 <profile>
			     <id>qa</id>
			     <activation>
	            	<activeByDefault>true</activeByDefault>
	        	</activation>
				<build>
					<finalName>upload</finalName>
					<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<attachClasses>true</attachClasses>	
							<failOnMissingWebXml>false</failOnMissingWebXml>							
							<webResources>
								<resource>
									<directory>src/webapp</directory>
									<filtering>true</filtering>
								</resource>
							</webResources>
						</configuration>
					</plugin>					
					
					<plugin>					
						<groupId>com.github.eirslett</groupId>					
						<artifactId>frontend-maven-plugin</artifactId>					
						<version>1.3</version>							
						<configuration>
							<nodeVersion>v10.15.3</nodeVersion>
							<npmVersion>6.4.1</npmVersion>							
						</configuration>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>v10.15.3</nodeVersion>
									<npmVersion>6.4.1</npmVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>-g install</arguments>
								</configuration>
							</execution>
							 <execution>
								<id>npm run build-qa</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>run build-qa</arguments>
									<npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
								</configuration>
								<phase>generate-resources</phase>	
							</execution> 									 
						</executions>					
					</plugin>					 
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/static/</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/deploy</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin> 
				</plugins>
				</build>
		 </profile>
	 </profiles>


</project>
